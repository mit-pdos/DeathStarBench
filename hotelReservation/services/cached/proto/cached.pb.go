// Code generated by protoc-gen-go. DO NOT EDIT.
// source: services/cached/proto/cached.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:

	services/cached/proto/cached.proto

It has these top-level messages:

	GetRequest
	GetResult
	SetRequest
	SetResult
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto1.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *GetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

type GetResult struct {
	Ok  bool   `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (m *GetResult) Reset()                    { *m = GetResult{} }
func (m *GetResult) String() string            { return proto1.CompactTextString(m) }
func (*GetResult) ProtoMessage()               {}
func (*GetResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetResult) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func (m *GetResult) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

type SetRequest struct {
	Key string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	Val []byte `protobuf:"bytes,2,opt,name=val,proto3" json:"val,omitempty"`
}

func (m *SetRequest) Reset()                    { *m = SetRequest{} }
func (m *SetRequest) String() string            { return proto1.CompactTextString(m) }
func (*SetRequest) ProtoMessage()               {}
func (*SetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *SetRequest) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *SetRequest) GetVal() []byte {
	if m != nil {
		return m.Val
	}
	return nil
}

type SetResult struct {
	Ok bool `protobuf:"varint,1,opt,name=ok" json:"ok,omitempty"`
}

func (m *SetResult) Reset()                    { *m = SetResult{} }
func (m *SetResult) String() string            { return proto1.CompactTextString(m) }
func (*SetResult) ProtoMessage()               {}
func (*SetResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *SetResult) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto1.RegisterType((*GetRequest)(nil), "GetRequest")
	proto1.RegisterType((*GetResult)(nil), "GetResult")
	proto1.RegisterType((*SetRequest)(nil), "SetRequest")
	proto1.RegisterType((*SetResult)(nil), "SetResult")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cached service

type CachedClient interface {
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResult, error)
	Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResult, error)
}

type cachedClient struct {
	cc *grpc.ClientConn
}

func NewCachedClient(cc *grpc.ClientConn) CachedClient {
	return &cachedClient{cc}
}

func (c *cachedClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResult, error) {
	out := new(GetResult)
	err := grpc.Invoke(ctx, "/Cached/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cachedClient) Set(ctx context.Context, in *SetRequest, opts ...grpc.CallOption) (*SetResult, error) {
	out := new(SetResult)
	err := grpc.Invoke(ctx, "/Cached/Set", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cached service

type CachedServer interface {
	Get(context.Context, *GetRequest) (*GetResult, error)
	Set(context.Context, *SetRequest) (*SetResult, error)
}

func RegisterCachedServer(s *grpc.Server, srv CachedServer) {
	s.RegisterService(&_Cached_serviceDesc, srv)
}

func _Cached_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CachedServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cached/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CachedServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cached_Set_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CachedServer).Set(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Cached/Set",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CachedServer).Set(ctx, req.(*SetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cached_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Cached",
	HandlerType: (*CachedServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _Cached_Get_Handler,
		},
		{
			MethodName: "Set",
			Handler:    _Cached_Set_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "services/cached/proto/cached.proto",
}

func init() { proto1.RegisterFile("services/cached/proto/cached.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2a, 0x4e, 0x2d, 0x2a,
	0xcb, 0x4c, 0x4e, 0x2d, 0xd6, 0x4f, 0x4e, 0x4c, 0xce, 0x48, 0x4d, 0xd1, 0x2f, 0x28, 0xca, 0x2f,
	0xc9, 0x87, 0x72, 0xf4, 0xc0, 0x1c, 0x25, 0x39, 0x2e, 0x2e, 0xf7, 0xd4, 0x92, 0xa0, 0xd4, 0xc2,
	0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x01, 0x2e, 0xe6, 0xec, 0xd4, 0x4a, 0x09, 0x46, 0x05, 0x46, 0x0d,
	0xce, 0x20, 0x10, 0x53, 0x49, 0x97, 0x8b, 0x13, 0x2c, 0x5f, 0x5c, 0x9a, 0x53, 0x22, 0xc4, 0xc7,
	0xc5, 0x94, 0x9f, 0x0d, 0x96, 0xe5, 0x08, 0x62, 0xca, 0xcf, 0x06, 0x29, 0x2f, 0x4b, 0xcc, 0x91,
	0x60, 0x52, 0x60, 0xd4, 0xe0, 0x09, 0x02, 0x31, 0x95, 0x0c, 0xb8, 0xb8, 0x82, 0xf1, 0x18, 0x87,
	0x45, 0x87, 0x34, 0x17, 0x67, 0x30, 0x2e, 0x0b, 0x8c, 0x3c, 0xb8, 0xd8, 0x9c, 0xc1, 0xae, 0x15,
	0x92, 0xe3, 0x62, 0x76, 0x4f, 0x2d, 0x11, 0xe2, 0xd6, 0x43, 0xb8, 0x56, 0x8a, 0x4b, 0x0f, 0xe1,
	0x34, 0x39, 0x2e, 0xe6, 0x60, 0xb0, 0x7c, 0x30, 0xb2, 0x3c, 0xdc, 0x64, 0x27, 0xc9, 0x28, 0x71,
	0x3d, 0x7d, 0xac, 0xe1, 0x91, 0xc4, 0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd9,
	0xea, 0xc0, 0x68, 0x2f, 0x01, 0x00, 0x00,
}
